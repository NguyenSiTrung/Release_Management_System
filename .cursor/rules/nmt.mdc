---
description: 
globs: 
alwaysApply: true
---
üíé Cursor Rule for Project: NMT Release Management System
B·∫£n quy t·∫Øc n√†y ƒë∆∞·ª£c t√πy ch·ªânh d·ª±a tr√™n "Global Rules" v√† √°p d·ª•ng c√°c chi ti·∫øt c·ª• th·ªÉ t·ª´ t√†i li·ªáu thi·∫øt k·∫ø h·ªá th·ªëng nmt_management_system.txt.

üîÑ Nh·∫≠n th·ª©c & B·ªëi c·∫£nh D·ª± √°n (Project Awareness & Context)
Ngu·ªìn tham kh·∫£o ch√≠nh: T√†i li·ªáu thi·∫øt k·∫ø h·ªá th·ªëng nmt_management_system.txt l√† ngu·ªìn ch√¢n l√Ω (source of truth) cho ki·∫øn tr√∫c, lu·ªìng nghi·ªáp v·ª• v√† c√°c th·ª±c th·ªÉ. T√¥i s·∫Ω lu√¥n tham chi·∫øu t√†i li·ªáu n√†y. B·∫•t c·ª© khi n√†o c√≥ thay ƒë·ªïi, c·∫≠p nh·∫≠t, th√™m t√≠nh nƒÉng m·ªõi hay s·ª≠a ƒë·ªïi, t√¥i s·∫Ω c·∫≠p nh·∫≠t l·∫°i t√†i li·ªáu thi·∫øt k·∫ø h·ªá th·ªëng n√†y.

Tu√¢n th·ªß Ki·∫øn tr√∫c:

Backend: M·ªçi logic ph·∫£i tu√¢n th·ªß c·∫•u tr√∫c ƒë√£ ƒë·ªãnh s·∫µn:

Endpoints: app/api/v1/endpoints/

Logic CRUD: app/crud/

Schemas Pydantic: app/schemas/

Models SQLAlchemy: app/db/models.py

Logic nghi·ªáp v·ª• c·ªët l√µi: app/core/ (v√≠ d·ª•: evaluation.py)

Frontend: Tu√¢n th·ªß thi·∫øt k·∫ø Argon Dashboard Style s·ª≠ d·ª•ng Material-UI (MUI). C√°c component m·ªõi ph·∫£i nh·∫•t qu√°n v·ªÅ giao di·ªán (m√†u s·∫Øc, gradient, shadow) v·ªõi c√°c m√†n h√¨nh hi·ªán c√≥.

Th∆∞ vi·ªán & C√¥ng ngh·ªá:

Backend: Ch·ªâ s·ª≠ d·ª•ng c√°c th∆∞ vi·ªán ƒë√£ c√≥ trong pyproject.toml (ho·∫∑c requirements.txt) nh∆∞ FastAPI, SQLAlchemy 2.0, Pydantic 2.0, Alembic.

Frontend: S·ª≠ d·ª•ng React 18, MUI 5, Axios, Formik, v√† Recharts nh∆∞ ƒë√£ m√¥ t·∫£.

Tr∆∞·ªõc khi ƒë·ªÅ xu·∫•t th∆∞ vi·ªán m·ªõi, t√¥i s·∫Ω ki·ªÉm tra v√† xin ph√©p.

üß± C·∫•u tr√∫c Code & T√≠nh Module (Code Structure & Modularity)
Gi·ªõi h·∫°n File: Kh√¥ng file Python n√†o trong th∆∞ m·ª•c app/ v∆∞·ª£t qu√° 500 d√≤ng.

V√≠ d·ª•: N·∫øu app/api/v1/endpoints/model_versions.py tr·ªü n√™n qu√° ph·ª©c t·∫°p, logic x·ª≠ l√Ω file upload s·∫Ω ƒë∆∞·ª£c t√°ch ra th√†nh c√°c h√†m helper trong app/core/ ho·∫∑c app/crud/.

Ph√¢n t√°ch Tr√°ch nhi·ªám:

Endpoints (/endpoints/*.py): Ch·ªâ ch·ªãu tr√°ch nhi·ªám nh·∫≠n request, g·ªçi CRUD/logic nghi·ªáp v·ª•, v√† tr·∫£ v·ªÅ response.

CRUD (/crud/*.py): Ch·ªâ ch·ª©a c√°c thao t√°c tr·ª±c ti·∫øp v·ªõi CSDL (create, read, update, delete) th√¥ng qua SQLAlchemy.

Schemas (/schemas/*.py): Ch·ªâ ƒë·ªãnh nghƒ©a c·∫•u tr√∫c d·ªØ li·ªáu cho API request/response b·∫±ng Pydantic.

‚öôÔ∏è C·∫•u h√¨nh & B·∫£o m·∫≠t (Configuration & Security)
Bi·∫øn m√¥i tr∆∞·ªùng: T·∫•t c·∫£ c√°c c·∫•u h√¨nh (DATABASE_URL, SECRET_KEY, ƒë∆∞·ªùng d·∫´n t·ªõi storage/) ph·∫£i ƒë∆∞·ª£c qu·∫£n l√Ω qua bi·∫øn m√¥i tr∆∞·ªùng v√† ƒë∆∞·ª£c ƒë·ªçc b·ªüi app/core/config.py.

Validation b·∫Øt bu·ªôc: M·ªçi d·ªØ li·ªáu ƒë·∫ßu v√†o t·ª´ client qua API ph·∫£i ƒë∆∞·ª£c validate b·∫±ng m·ªôt schema Pydantic t∆∞∆°ng ·ª©ng. Nghi√™m c·∫•m s·ª≠ d·ª•ng d·ªØ li·ªáu th√¥ t·ª´ request trong c√°c h√†m CRUD.

Ph√¢n quy·ªÅn: Khi t·∫°o endpoint m·ªõi, lu√¥n ph·∫£i th√™m dependency ki·ªÉm tra quy·ªÅn (deps.get_current_active_user) v√† logic ki·ªÉm tra vai tr√≤ (role) n·∫øu c·∫ßn, d·ª±a tr√™n c√°c ƒë·ªëi t∆∞·ª£ng ng∆∞·ªùi d√πng: Admin, Release Manager, Member.

üóÑÔ∏è Qu·∫£n l√Ω & Di chuy·ªÉn CSDL (Database Management & Migrations)
Nguy√™n t·∫Øc v√†ng: M·ªôt Thay ƒë·ªïi Logic = M·ªôt File Migration. M·ªçi thay ƒë·ªïi v·ªÅ c·∫•u tr√∫c CSDL (trong app/db/models.py) ph·∫£i ƒë∆∞·ª£c ghi l·∫°i b·∫±ng m·ªôt file migration m·ªõi v√† ri√™ng bi·ªát. Th∆∞ m·ª•c alembic/versions/ l√† n∆°i t·∫≠p trung duy nh·∫•t ƒë·ªÉ qu·∫£n l√Ω c√°c file n√†y, ƒë√≥ng vai tr√≤ nh∆∞ m·ªôt cu·ªën nh·∫≠t k√Ω kh√¥ng th·ªÉ thay ƒë·ªïi v·ªÅ l·ªãch s·ª≠ CSDL.

Quy tr√¨nh b·∫Øt bu·ªôc:

T·∫°o Revision M·ªõi: Sau khi s·ª≠a ƒë·ªïi model, lu√¥n ch·∫°y l·ªánh alembic revision --autogenerate -m "M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ thay ƒë·ªïi" ƒë·ªÉ t·∫°o m·ªôt file script m·ªõi b√™n trong th∆∞ m·ª•c alembic/versions/.

Ki·ªÉm tra & X√°c th·ª±c: Lu√¥n ki·ªÉm tra l·∫°i n·ªôi dung file migration v·ª´a t·∫°o ƒë·ªÉ ƒë·∫£m b·∫£o c√°c l·ªánh upgrade() v√† downgrade() ph·∫£n √°nh ƒë√∫ng thay ƒë·ªïi.

Kh√¥ng bao gi·ªù s·ª≠a file migration c≈©: M·ªôt khi file migration ƒë√£ ƒë∆∞·ª£c commit, kh√¥ng bao gi·ªù ƒë∆∞·ª£c s·ª≠a ƒë·ªïi n√≥. N·∫øu c·∫ßn thay ƒë·ªïi th√™m, h√£y t·∫°o m·ªôt file migration m·ªõi.

Commit v√†o Git: C√°c file migration l√† m·ªôt ph·∫ßn kh√¥ng th·ªÉ thi·∫øu c·ªßa m√£ ngu·ªìn v√† ph·∫£i ƒë∆∞·ª£c commit v√†o Git.

üß™ Ki·ªÉm th·ª≠ & ƒê·ªô tin c·∫≠y (Testing & Reliability)
C·∫•u tr√∫c Tests: M·ªçi file test ph·∫£i ƒë∆∞·ª£c ƒë·∫∑t trong th∆∞ m·ª•c /tests v√† c√≥ c·∫•u tr√∫c t∆∞∆°ng ·ª©ng. V√≠ d·ª•: logic cho app/api/v1/endpoints/testsets.py s·∫Ω ƒë∆∞·ª£c test trong tests/api/v1/test_testsets.py.

K·ªãch b·∫£n Test t·ªëi thi·ªÉu: ƒê·ªëi v·ªõi m·ªôt t√≠nh nƒÉng m·ªõi, v√≠ d·ª• "T·∫°o Testset m·ªõi":

Happy Path: Test t·∫°o th√†nh c√¥ng.

Edge Case: Test v·ªõi d·ªØ li·ªáu thi·∫øu ho·∫∑c sai ƒë·ªãnh d·∫°ng.

Failure Case: Test v·ªõi c√°c ƒëi·ªÅu ki·ªán kh√¥ng h·ª£p l·ªá (v√≠ d·ª•: t·∫°o cho m·ªôt ƒë·ªëi t∆∞·ª£ng kh√¥ng t·ªìn t·∫°i).

Integration Tests: ∆Øu ti√™n vi·∫øt integration test cho c√°c lu·ªìng quan tr·ªçng, ƒë·∫∑c bi·ªát l√† Lu·ªìng ƒê√°nh gi√° Model.

üêû G·ª° l·ªói & Ghi nh·∫≠n (Debugging & Logging)
S·ª≠ d·ª•ng Logger c√≥ s·∫µn: Lu√¥n s·ª≠ d·ª•ng logger ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh s·∫µn trong app/main.py.

Ch·ªß ƒë·ªông Ghi Log: Lu√¥n th√™m log t·∫°i c√°c ƒëi·ªÉm quan tr·ªçng trong logic, ƒë·∫∑c bi·ªát l√† nh·ªØng n∆°i ti·ªÅm ·∫©n nguy c∆° l·ªói.

ERROR: L·ªói nghi√™m tr·ªçng (k·∫øt n·ªëi CSDL th·∫•t b·∫°i, t√°c v·ª• n·ªÅn s·ª•p ƒë·ªï).

INFO: C√°c s·ª± ki·ªán ch√≠nh (user login, t√°c v·ª• b·∫Øt ƒë·∫ßu).

DEBUG: Th√¥ng tin chi ti·∫øt cho vi·ªác g·ª° l·ªói (payload, gi√° tr·ªã t√≠nh to√°n).

C·∫≠p nh·∫≠t CHANGELOG.md: Khi m·ªôt bug quan tr·ªçng ƒë∆∞·ª£c s·ª≠a, ghi l·∫°i V·∫•n ƒë·ªÅ, Nguy√™n nh√¢n, v√† Gi·∫£i ph√°p.

üìé Phong c√°ch & Quy ∆∞·ªõc (Style & Conventions)
ƒê·ªãnh d·∫°ng: Code Python lu√¥n ƒë∆∞·ª£c format b·∫±ng black. Lu√¥n s·ª≠ d·ª•ng type hints.

Docstrings (Google Style): M·ªçi h√†m v√† ph∆∞∆°ng th·ª©c quan tr·ªçng ph·∫£i c√≥ docstring gi·∫£i th√≠ch m·ª•c ƒë√≠ch, tham s·ªë (Args), v√† gi√° tr·ªã tr·∫£ v·ªÅ (Returns).

Custom Exceptions: S·ª≠ d·ª•ng exception t√πy ch·ªânh cho c√°c l·ªói nghi·ªáp v·ª• (v√≠ d·ª•: ModelNotFoundException, TestsetInUseError).

üìö T√†i li·ªáu & Gi·∫£i th√≠ch (Documentation & Explainability)
README.md: Khi th√™m m·ªôt bi·∫øn m√¥i tr∆∞·ªùng m·ªõi ho·∫∑c thay ƒë·ªïi quy tr√¨nh c√†i ƒë·∫∑t, ph·∫£i c·∫≠p nh·∫≠t README.md.

Code Comments: Th√™m ch√∫ th√≠ch ƒë·ªÉ gi·∫£i th√≠ch c√°c logic ph·ª©c t·∫°p ho·∫∑c c√°c quy·∫øt ƒë·ªãnh thi·∫øt k·∫ø quan tr·ªçng.

üß† Quy t·∫Øc H√†nh vi c·ªßa AI (AI Behavior Rules)
X√°c nh·∫≠n tr∆∞·ªõc khi h√†nh ƒë·ªông: Tr∆∞·ªõc khi s·ª≠a ƒë·ªïi c√°c lu·ªìng ph·ª©c t·∫°p, t√¥i s·∫Ω h·ªèi ƒë·ªÉ x√°c nh·∫≠n c√°c y√™u c·∫ßu.

Kh√¥ng gi·∫£ ƒë·ªãnh: T√¥i s·∫Ω lu√¥n x√°c minh s·ª± t·ªìn t·∫°i c·ªßa c√°c ƒë∆∞·ªùng d·∫´n, bi·∫øn m√¥i tr∆∞·ªùng tr∆∞·ªõc khi vi·∫øt code thao t√°c tr√™n ch√∫ng.

L√†m vi·ªác l·∫∑p l·∫°i: T√¥i s·∫Ω x√¢y d·ª±ng c√°c t√≠nh nƒÉng theo t·ª´ng b∆∞·ªõc nh·ªè v√† c√≥ th·ªÉ ki·ªÉm ch·ª©ng (Schema -> CRUD -> Unit Test -> Endpoint) thay v√¨ t·∫°o ra m·ªôt kh·ªëi code l·ªõn c√πng l√∫c.